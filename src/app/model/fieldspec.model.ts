import { BaseModel } from './base.model';
import { I18nresourceModel } from 'app/model/i18nresource.model';

export class SelectiveItem {
    value: string;
    label: string;
    checked: boolean;
}

export class FieldspecModel extends BaseModel {
    show: string; // could be 'checked' or empty
    position: number;
    classFullName: string;
    dataType: string;
    pattern: string;
    formatter: string;
    required: boolean;
    adminReserved: boolean;
    autogenerated: boolean;
    enumFlag: boolean;
    enumerationName: string;
    labelField: string;
    minVal: string;
    maxVal: string;
    minLength: number;
    maxLength: number;
    defaultValue: string;
    multiChoice: boolean;
    name: string;
    label: string;
    value: string;
    hide: boolean;
    detailHide: boolean;
    i18nKeyField: boolean;
    i18nField: boolean;
    componentMetaDatas: FieldspecModel[];
    hideComponent: boolean;
    selectiveValues: string[];
    isValid: boolean;
    sortable: boolean;
    usedForSorting: boolean;
    descSort: boolean;
    searchType: string;
    clearSearchCondition: boolean;
    embedded: boolean;

    parentFieldSpecification: FieldspecModel;
    gtxs: boolean;
    gtsm: boolean;
    gtmd: boolean;
    gtlg: boolean;
    fxhide: boolean;

    selectiveItems: SelectiveItem[];
    inputType: string;
    i18nResourcesForField: I18nresourceModel[];
    static sortTableHeader(a: FieldspecModel, b: FieldspecModel): number {
        return a.position - b.position;
    }
}
